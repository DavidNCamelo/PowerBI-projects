table colombianTolls
	lineageTag: a6cd3b0e-7e55-4556-a219-2fbff2a4cd6c

	column idpeaje
		dataType: string
		lineageTag: 83f68d7a-44e8-4ece-81aa-7b6b2797c8ea
		summarizeBy: none
		sourceColumn: idpeaje

		annotation SummarizationSetBy = Automatic

	column peaje
		dataType: string
		lineageTag: ee58ae72-fffe-40bb-8293-06a009d1f566
		summarizeBy: none
		sourceColumn: peaje

		annotation SummarizationSetBy = Automatic

	column categoriatarifa
		dataType: string
		lineageTag: 8fe178a4-274f-46b9-b560-4d275eb1d692
		summarizeBy: none
		sourceColumn: categoriatarifa

		annotation SummarizationSetBy = Automatic

	column desde
		dataType: dateTime
		formatString: Long Date
		lineageTag: 55279556-be70-4611-a422-726c1569bbe7
		summarizeBy: none
		sourceColumn: desde

		variation Variación
			isDefault
			relationship: 317cdcd5-ed29-4199-a610-e3ac8cadfc74
			defaultHierarchy: LocalDateTable_525e3d7e-de29-4c96-b1ed-8bc43f7d5aa1.'Jerarquía de fechas'

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column hasta
		dataType: dateTime
		formatString: Long Date
		lineageTag: 32421407-64e5-4537-a78f-18d27e15ee3c
		summarizeBy: none
		sourceColumn: hasta

		variation Variación
			isDefault
			relationship: 8c56fb6b-e563-4b18-b523-64eb07e8bf46
			defaultHierarchy: LocalDateTable_bc8ef40f-3b0c-4574-8eff-20596bd5b303.'Jerarquía de fechas'

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column valortarifa
		dataType: decimal
		formatString: \$\ #,0.###############;-\$\ #,0.###############;\$\ #,0.###############
		lineageTag: 2aa90ae8-e109-459c-857f-9a3fceabf923
		summarizeBy: sum
		sourceColumn: valortarifa

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"currencyCulture":"es-CO"}

	column cantidadtrafico
		dataType: int64
		formatString: 0
		lineageTag: c69d9c96-40ca-4280-b9be-890d975fe3f0
		summarizeBy: sum
		sourceColumn: cantidadtrafico

		annotation SummarizationSetBy = Automatic

	column cantidadevasores
		dataType: int64
		formatString: 0
		lineageTag: 325e9f89-1857-489a-9c0a-370f619573af
		summarizeBy: sum
		sourceColumn: cantidadevasores

		annotation SummarizationSetBy = Automatic

	column cantidadexentos787
		dataType: int64
		formatString: 0
		lineageTag: 7eb22629-2036-43ae-b714-e272156200fb
		summarizeBy: sum
		sourceColumn: cantidadexentos787

		annotation SummarizationSetBy = Automatic

	partition colombianTolls = m
		mode: import
		source =
				let
				    Origen = R.Execute("# Librerías necesarias#(lf)library(httr)#(lf)library(jsonlite)#(lf)library(dplyr)#(lf)library(lubridate)#(lf)library(purrr)#(lf)#(lf)# URL base#(lf)url <- ""https://www.datos.gov.co/resource/8yi9-t44c.json""#(lf)#(lf)# Parámetros iniciales#(lf)limit <- 1000#(lf)offset <- 0#(lf)all_data <- list()#(lf)#(lf)repeat {#(lf)  # Hacer la solicitud GET#(lf)  res <- GET(url, query = list(""$limit"" = limit, ""$offset"" = offset))#(lf)  #(lf)  # Verificar código de estado#(lf)  if (status_code(res) != 200) {#(lf)    message(""Error en la solicitud: "", status_code(res))#(lf)    break#(lf)  }#(lf)  #(lf)  # Parsear el contenido como lista#(lf)  data <- fromJSON(content(res, ""text"", encoding = ""UTF-8""), flatten = TRUE)#(lf)  #(lf)  # Salir del bucle si no hay datos#(lf)  if (length(data) == 0) {#(lf)    break#(lf)  }#(lf)  #(lf)  # Agregar al acumulador#(lf)  all_data <- append(all_data, list(data))#(lf)  #(lf)  # Incrementar offset#(lf)  offset <- offset + limit#(lf)}#(lf)#(lf)# Combinar todos los bloques de datos en un solo data frame#(lf)df <- bind_rows(all_data)#(lf)#(lf)# Convertir las columnas de fecha (si existen)#(lf)if (""desde"" %in% names(df)) {#(lf)  df$desde <- as_date(df$desde)#(lf)}#(lf)if (""hasta"" %in% names(df)) {#(lf)  df$hasta <- as_date(df$hasta)#(lf)}"),
				    df1 = Origen{[Name="df"]}[Value],
				    #"Tipo cambiado" = Table.TransformColumnTypes(df1,{{"valortarifa", Currency.Type}, {"cantidadtrafico", Int64.Type}, {"cantidadevasores", Int64.Type}, {"cantidadexentos787", Int64.Type}})
				in
				    #"Tipo cambiado"

	annotation PBI_NavigationStepName = Navegación

	annotation PBI_ResultType = Table

